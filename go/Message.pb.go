// Code generated by protoc-gen-go. DO NOT EDIT.
// source: Message.proto

package main

import proto "github.com/golang/protobuf/proto"
import fmt "fmt"
import math "math"

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion2 // please upgrade the proto package

type Message_MessageType int32

const (
	Message_UNDEFINED   Message_MessageType = 0
	Message_COMMAND     Message_MessageType = 1
	Message_RESPONSE    Message_MessageType = 2
	Message_FILE_CHUNK  Message_MessageType = 3
	Message_NAT_REQUEST Message_MessageType = 4
	Message_NAT_CHECK   Message_MessageType = 5
	Message_PING        Message_MessageType = 6
	Message_JOIN        Message_MessageType = 7
	Message_LEAVE       Message_MessageType = 8
)

var Message_MessageType_name = map[int32]string{
	0: "UNDEFINED",
	1: "COMMAND",
	2: "RESPONSE",
	3: "FILE_CHUNK",
	4: "NAT_REQUEST",
	5: "NAT_CHECK",
	6: "PING",
	7: "JOIN",
	8: "LEAVE",
}
var Message_MessageType_value = map[string]int32{
	"UNDEFINED":   0,
	"COMMAND":     1,
	"RESPONSE":    2,
	"FILE_CHUNK":  3,
	"NAT_REQUEST": 4,
	"NAT_CHECK":   5,
	"PING":        6,
	"JOIN":        7,
	"LEAVE":       8,
}

func (x Message_MessageType) String() string {
	return proto.EnumName(Message_MessageType_name, int32(x))
}
func (Message_MessageType) EnumDescriptor() ([]byte, []int) {
	return fileDescriptor_Message_d5cddc2664eb16b4, []int{0, 0}
}

type Message_Status int32

const (
	Message_FAIL Message_Status = 0
	Message_OK   Message_Status = 1
)

var Message_Status_name = map[int32]string{
	0: "FAIL",
	1: "OK",
}
var Message_Status_value = map[string]int32{
	"FAIL": 0,
	"OK":   1,
}

func (x Message_Status) String() string {
	return proto.EnumName(Message_Status_name, int32(x))
}
func (Message_Status) EnumDescriptor() ([]byte, []int) {
	return fileDescriptor_Message_d5cddc2664eb16b4, []int{0, 1}
}

type Message struct {
	Uuid        string              `protobuf:"bytes,1,opt,name=uuid" json:"uuid,omitempty"`
	TYPE        Message_MessageType `protobuf:"varint,2,opt,name=TYPE,enum=botnet_p2p.Message_MessageType" json:"TYPE,omitempty"`
	Sender      string              `protobuf:"bytes,3,opt,name=sender" json:"sender,omitempty"`
	Receiver    string              `protobuf:"bytes,4,opt,name=receiver" json:"receiver,omitempty"`
	Propagation bool                `protobuf:"varint,5,opt,name=propagation" json:"propagation,omitempty"`
	Signature   []byte              `protobuf:"bytes,6,opt,name=signature,proto3" json:"signature,omitempty"`
	// Types that are valid to be assigned to Payload:
	//	*Message_PCommand
	//	*Message_PResponse
	//	*Message_PFile
	//	*Message_PNATRequest
	//	*Message_PNATCheck
	//	*Message_PJoin
	//	*Message_PLeave
	Payload              isMessage_Payload `protobuf_oneof:"payload"`
	XXX_NoUnkeyedLiteral struct{}          `json:"-"`
	XXX_unrecognized     []byte            `json:"-"`
	XXX_sizecache        int32             `json:"-"`
}

func (m *Message) Reset()         { *m = Message{} }
func (m *Message) String() string { return proto.CompactTextString(m) }
func (*Message) ProtoMessage()    {}
func (*Message) Descriptor() ([]byte, []int) {
	return fileDescriptor_Message_d5cddc2664eb16b4, []int{0}
}
func (m *Message) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Message.Unmarshal(m, b)
}
func (m *Message) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Message.Marshal(b, m, deterministic)
}
func (dst *Message) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Message.Merge(dst, src)
}
func (m *Message) XXX_Size() int {
	return xxx_messageInfo_Message.Size(m)
}
func (m *Message) XXX_DiscardUnknown() {
	xxx_messageInfo_Message.DiscardUnknown(m)
}

var xxx_messageInfo_Message proto.InternalMessageInfo

type isMessage_Payload interface {
	isMessage_Payload()
}

type Message_PCommand struct {
	PCommand *Message_Command `protobuf:"bytes,7,opt,name=pCommand,oneof"`
}
type Message_PResponse struct {
	PResponse *Message_Response `protobuf:"bytes,8,opt,name=pResponse,oneof"`
}
type Message_PFile struct {
	PFile *Message_FileChunk `protobuf:"bytes,9,opt,name=pFile,oneof"`
}
type Message_PNATRequest struct {
	PNATRequest *Message_NATRequest `protobuf:"bytes,10,opt,name=pNATRequest,oneof"`
}
type Message_PNATCheck struct {
	PNATCheck *Message_NATCheck `protobuf:"bytes,11,opt,name=pNATCheck,oneof"`
}
type Message_PJoin struct {
	PJoin *Message_Join `protobuf:"bytes,12,opt,name=pJoin,oneof"`
}
type Message_PLeave struct {
	PLeave *Message_Leave `protobuf:"bytes,13,opt,name=pLeave,oneof"`
}

func (*Message_PCommand) isMessage_Payload()    {}
func (*Message_PResponse) isMessage_Payload()   {}
func (*Message_PFile) isMessage_Payload()       {}
func (*Message_PNATRequest) isMessage_Payload() {}
func (*Message_PNATCheck) isMessage_Payload()   {}
func (*Message_PJoin) isMessage_Payload()       {}
func (*Message_PLeave) isMessage_Payload()      {}

func (m *Message) GetPayload() isMessage_Payload {
	if m != nil {
		return m.Payload
	}
	return nil
}

func (m *Message) GetUuid() string {
	if m != nil {
		return m.Uuid
	}
	return ""
}

func (m *Message) GetTYPE() Message_MessageType {
	if m != nil {
		return m.TYPE
	}
	return Message_UNDEFINED
}

func (m *Message) GetSender() string {
	if m != nil {
		return m.Sender
	}
	return ""
}

func (m *Message) GetReceiver() string {
	if m != nil {
		return m.Receiver
	}
	return ""
}

func (m *Message) GetPropagation() bool {
	if m != nil {
		return m.Propagation
	}
	return false
}

func (m *Message) GetSignature() []byte {
	if m != nil {
		return m.Signature
	}
	return nil
}

func (m *Message) GetPCommand() *Message_Command {
	if x, ok := m.GetPayload().(*Message_PCommand); ok {
		return x.PCommand
	}
	return nil
}

func (m *Message) GetPResponse() *Message_Response {
	if x, ok := m.GetPayload().(*Message_PResponse); ok {
		return x.PResponse
	}
	return nil
}

func (m *Message) GetPFile() *Message_FileChunk {
	if x, ok := m.GetPayload().(*Message_PFile); ok {
		return x.PFile
	}
	return nil
}

func (m *Message) GetPNATRequest() *Message_NATRequest {
	if x, ok := m.GetPayload().(*Message_PNATRequest); ok {
		return x.PNATRequest
	}
	return nil
}

func (m *Message) GetPNATCheck() *Message_NATCheck {
	if x, ok := m.GetPayload().(*Message_PNATCheck); ok {
		return x.PNATCheck
	}
	return nil
}

func (m *Message) GetPJoin() *Message_Join {
	if x, ok := m.GetPayload().(*Message_PJoin); ok {
		return x.PJoin
	}
	return nil
}

func (m *Message) GetPLeave() *Message_Leave {
	if x, ok := m.GetPayload().(*Message_PLeave); ok {
		return x.PLeave
	}
	return nil
}

// XXX_OneofFuncs is for the internal use of the proto package.
func (*Message) XXX_OneofFuncs() (func(msg proto.Message, b *proto.Buffer) error, func(msg proto.Message, tag, wire int, b *proto.Buffer) (bool, error), func(msg proto.Message) (n int), []interface{}) {
	return _Message_OneofMarshaler, _Message_OneofUnmarshaler, _Message_OneofSizer, []interface{}{
		(*Message_PCommand)(nil),
		(*Message_PResponse)(nil),
		(*Message_PFile)(nil),
		(*Message_PNATRequest)(nil),
		(*Message_PNATCheck)(nil),
		(*Message_PJoin)(nil),
		(*Message_PLeave)(nil),
	}
}

func _Message_OneofMarshaler(msg proto.Message, b *proto.Buffer) error {
	m := msg.(*Message)
	// payload
	switch x := m.Payload.(type) {
	case *Message_PCommand:
		b.EncodeVarint(7<<3 | proto.WireBytes)
		if err := b.EncodeMessage(x.PCommand); err != nil {
			return err
		}
	case *Message_PResponse:
		b.EncodeVarint(8<<3 | proto.WireBytes)
		if err := b.EncodeMessage(x.PResponse); err != nil {
			return err
		}
	case *Message_PFile:
		b.EncodeVarint(9<<3 | proto.WireBytes)
		if err := b.EncodeMessage(x.PFile); err != nil {
			return err
		}
	case *Message_PNATRequest:
		b.EncodeVarint(10<<3 | proto.WireBytes)
		if err := b.EncodeMessage(x.PNATRequest); err != nil {
			return err
		}
	case *Message_PNATCheck:
		b.EncodeVarint(11<<3 | proto.WireBytes)
		if err := b.EncodeMessage(x.PNATCheck); err != nil {
			return err
		}
	case *Message_PJoin:
		b.EncodeVarint(12<<3 | proto.WireBytes)
		if err := b.EncodeMessage(x.PJoin); err != nil {
			return err
		}
	case *Message_PLeave:
		b.EncodeVarint(13<<3 | proto.WireBytes)
		if err := b.EncodeMessage(x.PLeave); err != nil {
			return err
		}
	case nil:
	default:
		return fmt.Errorf("Message.Payload has unexpected type %T", x)
	}
	return nil
}

func _Message_OneofUnmarshaler(msg proto.Message, tag, wire int, b *proto.Buffer) (bool, error) {
	m := msg.(*Message)
	switch tag {
	case 7: // payload.pCommand
		if wire != proto.WireBytes {
			return true, proto.ErrInternalBadWireType
		}
		msg := new(Message_Command)
		err := b.DecodeMessage(msg)
		m.Payload = &Message_PCommand{msg}
		return true, err
	case 8: // payload.pResponse
		if wire != proto.WireBytes {
			return true, proto.ErrInternalBadWireType
		}
		msg := new(Message_Response)
		err := b.DecodeMessage(msg)
		m.Payload = &Message_PResponse{msg}
		return true, err
	case 9: // payload.pFile
		if wire != proto.WireBytes {
			return true, proto.ErrInternalBadWireType
		}
		msg := new(Message_FileChunk)
		err := b.DecodeMessage(msg)
		m.Payload = &Message_PFile{msg}
		return true, err
	case 10: // payload.pNATRequest
		if wire != proto.WireBytes {
			return true, proto.ErrInternalBadWireType
		}
		msg := new(Message_NATRequest)
		err := b.DecodeMessage(msg)
		m.Payload = &Message_PNATRequest{msg}
		return true, err
	case 11: // payload.pNATCheck
		if wire != proto.WireBytes {
			return true, proto.ErrInternalBadWireType
		}
		msg := new(Message_NATCheck)
		err := b.DecodeMessage(msg)
		m.Payload = &Message_PNATCheck{msg}
		return true, err
	case 12: // payload.pJoin
		if wire != proto.WireBytes {
			return true, proto.ErrInternalBadWireType
		}
		msg := new(Message_Join)
		err := b.DecodeMessage(msg)
		m.Payload = &Message_PJoin{msg}
		return true, err
	case 13: // payload.pLeave
		if wire != proto.WireBytes {
			return true, proto.ErrInternalBadWireType
		}
		msg := new(Message_Leave)
		err := b.DecodeMessage(msg)
		m.Payload = &Message_PLeave{msg}
		return true, err
	default:
		return false, nil
	}
}

func _Message_OneofSizer(msg proto.Message) (n int) {
	m := msg.(*Message)
	// payload
	switch x := m.Payload.(type) {
	case *Message_PCommand:
		s := proto.Size(x.PCommand)
		n += 1 // tag and wire
		n += proto.SizeVarint(uint64(s))
		n += s
	case *Message_PResponse:
		s := proto.Size(x.PResponse)
		n += 1 // tag and wire
		n += proto.SizeVarint(uint64(s))
		n += s
	case *Message_PFile:
		s := proto.Size(x.PFile)
		n += 1 // tag and wire
		n += proto.SizeVarint(uint64(s))
		n += s
	case *Message_PNATRequest:
		s := proto.Size(x.PNATRequest)
		n += 1 // tag and wire
		n += proto.SizeVarint(uint64(s))
		n += s
	case *Message_PNATCheck:
		s := proto.Size(x.PNATCheck)
		n += 1 // tag and wire
		n += proto.SizeVarint(uint64(s))
		n += s
	case *Message_PJoin:
		s := proto.Size(x.PJoin)
		n += 1 // tag and wire
		n += proto.SizeVarint(uint64(s))
		n += s
	case *Message_PLeave:
		s := proto.Size(x.PLeave)
		n += 1 // tag and wire
		n += proto.SizeVarint(uint64(s))
		n += s
	case nil:
	default:
		panic(fmt.Sprintf("proto: unexpected type %T in oneof", x))
	}
	return n
}

type Message_Command struct {
	CommandString        string   `protobuf:"bytes,1,opt,name=commandString" json:"commandString,omitempty"`
	SendResponse         bool     `protobuf:"varint,2,opt,name=sendResponse" json:"sendResponse,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *Message_Command) Reset()         { *m = Message_Command{} }
func (m *Message_Command) String() string { return proto.CompactTextString(m) }
func (*Message_Command) ProtoMessage()    {}
func (*Message_Command) Descriptor() ([]byte, []int) {
	return fileDescriptor_Message_d5cddc2664eb16b4, []int{0, 0}
}
func (m *Message_Command) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Message_Command.Unmarshal(m, b)
}
func (m *Message_Command) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Message_Command.Marshal(b, m, deterministic)
}
func (dst *Message_Command) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Message_Command.Merge(dst, src)
}
func (m *Message_Command) XXX_Size() int {
	return xxx_messageInfo_Message_Command.Size(m)
}
func (m *Message_Command) XXX_DiscardUnknown() {
	xxx_messageInfo_Message_Command.DiscardUnknown(m)
}

var xxx_messageInfo_Message_Command proto.InternalMessageInfo

func (m *Message_Command) GetCommandString() string {
	if m != nil {
		return m.CommandString
	}
	return ""
}

func (m *Message_Command) GetSendResponse() bool {
	if m != nil {
		return m.SendResponse
	}
	return false
}

type Message_Response struct {
	Value                string         `protobuf:"bytes,1,opt,name=value" json:"value,omitempty"`
	Status               Message_Status `protobuf:"varint,2,opt,name=status,enum=botnet_p2p.Message_Status" json:"status,omitempty"`
	XXX_NoUnkeyedLiteral struct{}       `json:"-"`
	XXX_unrecognized     []byte         `json:"-"`
	XXX_sizecache        int32          `json:"-"`
}

func (m *Message_Response) Reset()         { *m = Message_Response{} }
func (m *Message_Response) String() string { return proto.CompactTextString(m) }
func (*Message_Response) ProtoMessage()    {}
func (*Message_Response) Descriptor() ([]byte, []int) {
	return fileDescriptor_Message_d5cddc2664eb16b4, []int{0, 1}
}
func (m *Message_Response) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Message_Response.Unmarshal(m, b)
}
func (m *Message_Response) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Message_Response.Marshal(b, m, deterministic)
}
func (dst *Message_Response) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Message_Response.Merge(dst, src)
}
func (m *Message_Response) XXX_Size() int {
	return xxx_messageInfo_Message_Response.Size(m)
}
func (m *Message_Response) XXX_DiscardUnknown() {
	xxx_messageInfo_Message_Response.DiscardUnknown(m)
}

var xxx_messageInfo_Message_Response proto.InternalMessageInfo

func (m *Message_Response) GetValue() string {
	if m != nil {
		return m.Value
	}
	return ""
}

func (m *Message_Response) GetStatus() Message_Status {
	if m != nil {
		return m.Status
	}
	return Message_FAIL
}

type Message_FileChunk struct {
	Path                 string   `protobuf:"bytes,1,opt,name=path" json:"path,omitempty"`
	Name                 bool     `protobuf:"varint,2,opt,name=name" json:"name,omitempty"`
	ChunkNumber          uint32   `protobuf:"varint,3,opt,name=chunkNumber" json:"chunkNumber,omitempty"`
	AllChunks            uint32   `protobuf:"varint,4,opt,name=allChunks" json:"allChunks,omitempty"`
	ChunkSize            uint32   `protobuf:"varint,5,opt,name=chunkSize" json:"chunkSize,omitempty"`
	Data                 []byte   `protobuf:"bytes,6,opt,name=data,proto3" json:"data,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *Message_FileChunk) Reset()         { *m = Message_FileChunk{} }
func (m *Message_FileChunk) String() string { return proto.CompactTextString(m) }
func (*Message_FileChunk) ProtoMessage()    {}
func (*Message_FileChunk) Descriptor() ([]byte, []int) {
	return fileDescriptor_Message_d5cddc2664eb16b4, []int{0, 2}
}
func (m *Message_FileChunk) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Message_FileChunk.Unmarshal(m, b)
}
func (m *Message_FileChunk) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Message_FileChunk.Marshal(b, m, deterministic)
}
func (dst *Message_FileChunk) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Message_FileChunk.Merge(dst, src)
}
func (m *Message_FileChunk) XXX_Size() int {
	return xxx_messageInfo_Message_FileChunk.Size(m)
}
func (m *Message_FileChunk) XXX_DiscardUnknown() {
	xxx_messageInfo_Message_FileChunk.DiscardUnknown(m)
}

var xxx_messageInfo_Message_FileChunk proto.InternalMessageInfo

func (m *Message_FileChunk) GetPath() string {
	if m != nil {
		return m.Path
	}
	return ""
}

func (m *Message_FileChunk) GetName() bool {
	if m != nil {
		return m.Name
	}
	return false
}

func (m *Message_FileChunk) GetChunkNumber() uint32 {
	if m != nil {
		return m.ChunkNumber
	}
	return 0
}

func (m *Message_FileChunk) GetAllChunks() uint32 {
	if m != nil {
		return m.AllChunks
	}
	return 0
}

func (m *Message_FileChunk) GetChunkSize() uint32 {
	if m != nil {
		return m.ChunkSize
	}
	return 0
}

func (m *Message_FileChunk) GetData() []byte {
	if m != nil {
		return m.Data
	}
	return nil
}

type Message_NATRequest struct {
	Target               string   `protobuf:"bytes,1,opt,name=target" json:"target,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *Message_NATRequest) Reset()         { *m = Message_NATRequest{} }
func (m *Message_NATRequest) String() string { return proto.CompactTextString(m) }
func (*Message_NATRequest) ProtoMessage()    {}
func (*Message_NATRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_Message_d5cddc2664eb16b4, []int{0, 3}
}
func (m *Message_NATRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Message_NATRequest.Unmarshal(m, b)
}
func (m *Message_NATRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Message_NATRequest.Marshal(b, m, deterministic)
}
func (dst *Message_NATRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Message_NATRequest.Merge(dst, src)
}
func (m *Message_NATRequest) XXX_Size() int {
	return xxx_messageInfo_Message_NATRequest.Size(m)
}
func (m *Message_NATRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_Message_NATRequest.DiscardUnknown(m)
}

var xxx_messageInfo_Message_NATRequest proto.InternalMessageInfo

func (m *Message_NATRequest) GetTarget() string {
	if m != nil {
		return m.Target
	}
	return ""
}

type Message_NATCheck struct {
	Source               string   `protobuf:"bytes,1,opt,name=source" json:"source,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *Message_NATCheck) Reset()         { *m = Message_NATCheck{} }
func (m *Message_NATCheck) String() string { return proto.CompactTextString(m) }
func (*Message_NATCheck) ProtoMessage()    {}
func (*Message_NATCheck) Descriptor() ([]byte, []int) {
	return fileDescriptor_Message_d5cddc2664eb16b4, []int{0, 4}
}
func (m *Message_NATCheck) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Message_NATCheck.Unmarshal(m, b)
}
func (m *Message_NATCheck) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Message_NATCheck.Marshal(b, m, deterministic)
}
func (dst *Message_NATCheck) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Message_NATCheck.Merge(dst, src)
}
func (m *Message_NATCheck) XXX_Size() int {
	return xxx_messageInfo_Message_NATCheck.Size(m)
}
func (m *Message_NATCheck) XXX_DiscardUnknown() {
	xxx_messageInfo_Message_NATCheck.DiscardUnknown(m)
}

var xxx_messageInfo_Message_NATCheck proto.InternalMessageInfo

func (m *Message_NATCheck) GetSource() string {
	if m != nil {
		return m.Source
	}
	return ""
}

type Message_Join struct {
	IP                   string   `protobuf:"bytes,1,opt,name=IP" json:"IP,omitempty"`
	Port                 string   `protobuf:"bytes,2,opt,name=Port" json:"Port,omitempty"`
	IsNAT                bool     `protobuf:"varint,3,opt,name=isNAT" json:"isNAT,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *Message_Join) Reset()         { *m = Message_Join{} }
func (m *Message_Join) String() string { return proto.CompactTextString(m) }
func (*Message_Join) ProtoMessage()    {}
func (*Message_Join) Descriptor() ([]byte, []int) {
	return fileDescriptor_Message_d5cddc2664eb16b4, []int{0, 5}
}
func (m *Message_Join) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Message_Join.Unmarshal(m, b)
}
func (m *Message_Join) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Message_Join.Marshal(b, m, deterministic)
}
func (dst *Message_Join) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Message_Join.Merge(dst, src)
}
func (m *Message_Join) XXX_Size() int {
	return xxx_messageInfo_Message_Join.Size(m)
}
func (m *Message_Join) XXX_DiscardUnknown() {
	xxx_messageInfo_Message_Join.DiscardUnknown(m)
}

var xxx_messageInfo_Message_Join proto.InternalMessageInfo

func (m *Message_Join) GetIP() string {
	if m != nil {
		return m.IP
	}
	return ""
}

func (m *Message_Join) GetPort() string {
	if m != nil {
		return m.Port
	}
	return ""
}

func (m *Message_Join) GetIsNAT() bool {
	if m != nil {
		return m.IsNAT
	}
	return false
}

type Message_Leave struct {
	Guid                 string   `protobuf:"bytes,1,opt,name=guid" json:"guid,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *Message_Leave) Reset()         { *m = Message_Leave{} }
func (m *Message_Leave) String() string { return proto.CompactTextString(m) }
func (*Message_Leave) ProtoMessage()    {}
func (*Message_Leave) Descriptor() ([]byte, []int) {
	return fileDescriptor_Message_d5cddc2664eb16b4, []int{0, 6}
}
func (m *Message_Leave) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Message_Leave.Unmarshal(m, b)
}
func (m *Message_Leave) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Message_Leave.Marshal(b, m, deterministic)
}
func (dst *Message_Leave) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Message_Leave.Merge(dst, src)
}
func (m *Message_Leave) XXX_Size() int {
	return xxx_messageInfo_Message_Leave.Size(m)
}
func (m *Message_Leave) XXX_DiscardUnknown() {
	xxx_messageInfo_Message_Leave.DiscardUnknown(m)
}

var xxx_messageInfo_Message_Leave proto.InternalMessageInfo

func (m *Message_Leave) GetGuid() string {
	if m != nil {
		return m.Guid
	}
	return ""
}

func init() {
	proto.RegisterType((*Message)(nil), "botnet_p2p.Message")
	proto.RegisterType((*Message_Command)(nil), "botnet_p2p.Message.Command")
	proto.RegisterType((*Message_Response)(nil), "botnet_p2p.Message.Response")
	proto.RegisterType((*Message_FileChunk)(nil), "botnet_p2p.Message.FileChunk")
	proto.RegisterType((*Message_NATRequest)(nil), "botnet_p2p.Message.NATRequest")
	proto.RegisterType((*Message_NATCheck)(nil), "botnet_p2p.Message.NATCheck")
	proto.RegisterType((*Message_Join)(nil), "botnet_p2p.Message.Join")
	proto.RegisterType((*Message_Leave)(nil), "botnet_p2p.Message.Leave")
	proto.RegisterEnum("botnet_p2p.Message_MessageType", Message_MessageType_name, Message_MessageType_value)
	proto.RegisterEnum("botnet_p2p.Message_Status", Message_Status_name, Message_Status_value)
}

func init() { proto.RegisterFile("Message.proto", fileDescriptor_Message_d5cddc2664eb16b4) }

var fileDescriptor_Message_d5cddc2664eb16b4 = []byte{
	// 694 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0x74, 0x54, 0xc1, 0x6e, 0xda, 0x40,
	0x10, 0xc5, 0x04, 0x8c, 0x3d, 0x40, 0x6a, 0xad, 0xaa, 0x68, 0xeb, 0xa4, 0x2d, 0x42, 0x39, 0x70,
	0x8a, 0x2a, 0xa2, 0x1e, 0x2a, 0xf5, 0x50, 0x42, 0x4c, 0x21, 0x21, 0x86, 0x2e, 0x4e, 0xa5, 0x9e,
	0xa2, 0x0d, 0xac, 0x88, 0x15, 0xb0, 0xb7, 0xf6, 0x3a, 0x52, 0xfa, 0x01, 0xbd, 0xf4, 0x3b, 0xfa,
	0x9f, 0xd5, 0x2e, 0x6b, 0x20, 0x92, 0x7b, 0x62, 0xe6, 0xcd, 0x7b, 0xc3, 0x78, 0xe7, 0xed, 0x42,
	0xf3, 0x86, 0xa5, 0x29, 0x5d, 0xb2, 0x33, 0x9e, 0xc4, 0x22, 0x46, 0x70, 0x1f, 0x8b, 0x88, 0x89,
	0x3b, 0xde, 0xe5, 0xed, 0x3f, 0x00, 0x35, 0x5d, 0x45, 0x08, 0x2a, 0x59, 0x16, 0x2e, 0xb0, 0xd1,
	0x32, 0x3a, 0x36, 0x51, 0x31, 0x3a, 0x87, 0x4a, 0xf0, 0x63, 0xea, 0xe1, 0x72, 0xcb, 0xe8, 0x1c,
	0x76, 0xdf, 0x9f, 0xed, 0xa4, 0x67, 0x79, 0x53, 0xfd, 0x1b, 0x3c, 0x73, 0x46, 0x14, 0x19, 0x1d,
	0x81, 0x99, 0xb2, 0x68, 0xc1, 0x12, 0x7c, 0xa0, 0x5a, 0xe9, 0x0c, 0xb9, 0x60, 0x25, 0x6c, 0xce,
	0xc2, 0x27, 0x96, 0xe0, 0x8a, 0xaa, 0x6c, 0x73, 0xd4, 0x82, 0x3a, 0x4f, 0x62, 0x4e, 0x97, 0x54,
	0x84, 0x71, 0x84, 0xab, 0x2d, 0xa3, 0x63, 0x91, 0x7d, 0x08, 0x9d, 0x80, 0x9d, 0x86, 0xcb, 0x88,
	0x8a, 0x2c, 0x61, 0xd8, 0x6c, 0x19, 0x9d, 0x06, 0xd9, 0x01, 0xe8, 0x13, 0x58, 0xbc, 0x1f, 0xaf,
	0xd7, 0x34, 0x5a, 0xe0, 0x5a, 0xcb, 0xe8, 0xd4, 0xbb, 0xc7, 0x45, 0xc3, 0x6a, 0xca, 0xb0, 0x44,
	0xb6, 0x74, 0xf4, 0x19, 0x6c, 0x4e, 0x58, 0xca, 0xe3, 0x28, 0x65, 0xd8, 0x52, 0xda, 0x93, 0x22,
	0x6d, 0xce, 0x19, 0x96, 0xc8, 0x4e, 0x80, 0x3e, 0x42, 0x95, 0x0f, 0xc2, 0x15, 0xc3, 0xb6, 0x52,
	0xbe, 0x2d, 0x52, 0xca, 0x7a, 0xff, 0x21, 0x8b, 0x1e, 0x87, 0x25, 0xb2, 0x61, 0xa3, 0x0b, 0xa8,
	0x73, 0xbf, 0x17, 0x10, 0xf6, 0x33, 0x63, 0xa9, 0xc0, 0xa0, 0xc4, 0xef, 0x8a, 0xc4, 0x3b, 0xd6,
	0xb0, 0x44, 0xf6, 0x45, 0x6a, 0x70, 0xbf, 0x17, 0xf4, 0x1f, 0xd8, 0xfc, 0x11, 0xd7, 0xff, 0x3f,
	0x78, 0xce, 0x51, 0x83, 0xe7, 0x09, 0xfa, 0x00, 0x55, 0x7e, 0x15, 0x87, 0x11, 0x6e, 0x28, 0x25,
	0x2e, 0x52, 0xca, 0xba, 0x9a, 0x59, 0x06, 0xe8, 0x1c, 0x4c, 0x3e, 0x66, 0xf4, 0x89, 0xe1, 0xa6,
	0x92, 0xbc, 0x29, 0x92, 0x28, 0xc2, 0xb0, 0x44, 0x34, 0xd5, 0x9d, 0x41, 0x2d, 0x3f, 0xe8, 0x53,
	0x68, 0xce, 0x37, 0xe1, 0x4c, 0x24, 0x61, 0xb4, 0xd4, 0x4e, 0x7b, 0x09, 0xa2, 0x36, 0x34, 0xa4,
	0x5f, 0xb6, 0x1b, 0x29, 0x2b, 0x2b, 0xbc, 0xc0, 0xdc, 0x00, 0xac, 0xed, 0x02, 0x5e, 0x43, 0xf5,
	0x89, 0xae, 0x32, 0xa6, 0xbb, 0x6d, 0x12, 0xd4, 0x05, 0x33, 0x15, 0x54, 0x64, 0xa9, 0xb6, 0xae,
	0x5b, 0x34, 0xeb, 0x4c, 0x31, 0x88, 0x66, 0xba, 0x7f, 0x0d, 0xb0, 0xb7, 0xab, 0x92, 0xd7, 0x81,
	0x53, 0xf1, 0x90, 0x5f, 0x07, 0x19, 0x4b, 0x2c, 0xa2, 0xeb, 0x7c, 0x26, 0x15, 0x4b, 0xe7, 0xce,
	0xa5, 0xc0, 0xcf, 0xd6, 0xf7, 0xda, 0xf2, 0x4d, 0xb2, 0x0f, 0x49, 0xe7, 0xd2, 0xd5, 0x4a, 0x75,
	0x4d, 0x95, 0xf1, 0x9b, 0x64, 0x07, 0xc8, 0xaa, 0x22, 0xcf, 0xc2, 0x5f, 0x4c, 0xf9, 0xbe, 0x49,
	0x76, 0x80, 0xfc, 0xc7, 0x05, 0x15, 0x54, 0x1b, 0x5e, 0xc5, 0xee, 0x29, 0xc0, 0x9e, 0x0b, 0x8e,
	0xc0, 0x14, 0x34, 0x59, 0x32, 0xa1, 0x27, 0xd5, 0x99, 0xdb, 0x06, 0x6b, 0xbb, 0x6b, 0x79, 0x23,
	0xe3, 0x2c, 0x99, 0xe7, 0x87, 0xa4, 0x33, 0xf7, 0x0b, 0x54, 0xd4, 0x66, 0x0f, 0xa1, 0x3c, 0x9a,
	0xea, 0x5a, 0x79, 0x34, 0x95, 0xff, 0x3a, 0x8d, 0x13, 0xa1, 0xbe, 0xd3, 0x26, 0x2a, 0x96, 0xe7,
	0x1c, 0xa6, 0x7e, 0x2f, 0x50, 0x5f, 0x68, 0x91, 0x4d, 0xe2, 0x1e, 0x43, 0x55, 0xed, 0x59, 0x4a,
	0x96, 0x7b, 0xaf, 0x87, 0x8c, 0xdb, 0xbf, 0x0d, 0xa8, 0xef, 0x3d, 0x0f, 0xa8, 0x09, 0xf6, 0xad,
	0x7f, 0xe9, 0x0d, 0x46, 0xbe, 0x77, 0xe9, 0x94, 0x50, 0x1d, 0x6a, 0xfd, 0xc9, 0xcd, 0x4d, 0xcf,
	0xbf, 0x74, 0x0c, 0xd4, 0x00, 0x8b, 0x78, 0xb3, 0xe9, 0xc4, 0x9f, 0x79, 0x4e, 0x19, 0x1d, 0x02,
	0x0c, 0x46, 0x63, 0xef, 0xae, 0x3f, 0xbc, 0xf5, 0xaf, 0x9d, 0x03, 0xf4, 0x0a, 0xea, 0x7e, 0x2f,
	0xb8, 0x23, 0xde, 0xb7, 0x5b, 0x6f, 0x16, 0x38, 0x15, 0xd9, 0x4a, 0x02, 0xfd, 0xa1, 0xd7, 0xbf,
	0x76, 0xaa, 0xc8, 0x82, 0xca, 0x74, 0xe4, 0x7f, 0x75, 0x4c, 0x19, 0x5d, 0x4d, 0x46, 0xbe, 0x53,
	0x43, 0x36, 0x54, 0xc7, 0x5e, 0xef, 0xbb, 0xe7, 0x58, 0x6d, 0x17, 0xcc, 0xcd, 0xae, 0x65, 0x79,
	0xd0, 0x1b, 0x8d, 0x9d, 0x12, 0x32, 0xa1, 0x3c, 0xb9, 0x76, 0x8c, 0x0b, 0x1b, 0x6a, 0x9c, 0x3e,
	0xaf, 0x62, 0xba, 0xb8, 0x37, 0xd5, 0x03, 0x79, 0xfe, 0x2f, 0x00, 0x00, 0xff, 0xff, 0xcf, 0x36,
	0x2e, 0x2c, 0x31, 0x05, 0x00, 0x00,
}
